
@using WheelofAccess.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

        <div class="card">
            <div class="card-header">
                <h3>@ViewBag.Title</h3>
                <div class="d-flex justify-content-end social_icon">
                    <span title="Login with your Facebook Account"><i class="fab fa-facebook-square"></i></span>
                    <span title="Login with your Google Account" id="external-google"><i class="fab fa-google-plus-square"></i></span>
                    <span title="Login with your Twitter Account"><i class="fab fa-twitter-square"></i></span>
                </div>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="input-group form-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text" title="Email"><i class="fas fa-at"></i></span>
                        </div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                    </div>
                    <div class="input-group form-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text" title="Password"><i class="fas fa-key"></i></span>
                        </div>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="row align-items-center remember">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe)
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Login" class="btn float-right btn-custom login_btn">
                        <input type="button" value="Cancel" class="btn float-right btn-secondary btn-cancel" data-dismiss="modal">
                    </div>
                }
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-center links">
                    Don't have an account? @Html.ActionLink("Sign Up", "Register")
                </div>
                <div class="d-flex justify-content-center">
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                </div>
            </div>
        </div>

<div class="d-none">
    @Html.Partial("~/Views/Account/_ExternalLoginsListPartial.cshtml", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
</div>

@*<div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                   Enable this once you have account confirmation enabled for password reset functionality
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>
                }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    //External login with google button
    $("#external-google").on("click", function () { $("#Google").click() })
    //Cancel button in login modal
    $(".btn-cancel").on("click", function () { window.history.back() })
    </script>
}
